# Generated by Django 5.2.5 on 2025-08-07 01:24

import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Voter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('voter_id', models.CharField(max_length=10, unique=True, validators=[django.core.validators.RegexValidator(message='Voter ID must be in format: 3 letters followed by 7 digits', regex='^[A-Z]{3}[0-9]{7}$')])),
                ('password', models.CharField(max_length=128)),
                ('first_name', models.CharField(max_length=50, validators=[django.core.validators.MinLengthValidator(6)])),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('mobile', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(message='Mobile number must be 10 digits and start with 6-9', regex='^[6-9][0-9]{9}$')])),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=10)),
                ('parent_spouse_name', models.CharField(max_length=100)),
                ('street_address', models.TextField()),
                ('city', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('pincode', models.CharField(max_length=6, validators=[django.core.validators.RegexValidator(message='Pincode must be 6 digits starting with non-zero', regex='^[1-9][0-9]{5}$')])),
                ('place_of_birth', models.CharField(max_length=100)),
                ('aadhar_number', models.CharField(max_length=12, unique=True, validators=[django.core.validators.RegexValidator(message='Aadhar number must be 12 digits', regex='^\\d{12}$')])),
                ('pan_number', models.CharField(max_length=10, unique=True, validators=[django.core.validators.RegexValidator(message='PAN must be in format: 5 letters, 4 digits, 1 letter', regex='^[A-Z]{5}[0-9]{4}[A-Z]$')])),
                ('is_active', models.BooleanField(default=True)),
                ('has_voted', models.BooleanField(default=False)),
                ('registration_date', models.DateTimeField(auto_now_add=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Voter',
                'verbose_name_plural': 'Voters',
                'db_table': 'voters',
            },
        ),
        migrations.CreateModel(
            name='CustomAdmin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Admin',
                'verbose_name_plural': 'Admins',
                'db_table': 'admins',
            },
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('is_valid', models.BooleanField(default=True)),
                ('voter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.voter')),
            ],
            options={
                'verbose_name': 'Vote',
                'verbose_name_plural': 'Votes',
                'db_table': 'votes',
            },
        ),
    ]
